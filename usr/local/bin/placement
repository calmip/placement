#! /bin/bash

dir=$(dirname $0)

export PYTHONPATH=$(cd $dir;cd ../lib/placement; pwd -P)

placement="$0.py"

if [[ "$*" =~ "--verb" ]]
then
	verb=1
else
	verb=0
fi

# --checkme => On checke le job qui est en etat "RUNNING"
if [[ $1 == "--checkme" ]]
then
	shift
	job_id=$(squeue --noheader -u $(whoami) -t R -o %A|head -1)
	if [[ $job_id == "" ]]
	then
		echo "ERREUR - Vous devez avoir des jobs en état RUNNING pour que --checkme ait un sens"
		exit 1
	fi
	if [[ $verb == 1 ]]
	then
		echo "OPTION --checkme: Check du job $job_id utilisateur $(whoami)"
	fi
	set -- $* "--check=$(whoami)"
fi
	
# --job_id 12345 => On checke le job 12345
if [[ $1 == "--jobid" ]]
then
	shift
	job_id=$1
	shift
fi

# --host taratata => On checke le host taratata
if [[ $1 == "--host" ]]
then
	shift
	host=$1
	shift
fi

# $job_id est spécifié => On va checker sur les nœuds
if [[ $job_id != "" ]]
then
    PN=$( squeue -j $job_id --noheader -o "%.9P@%.16R@%.8u" )
	if [[ $? != 0 ]]
    then
		echo "ERREUR - Mauvais jobid ! ($job_id)"
		exit 1
	fi

	[[ $PN =~ (.*)@(.*)@(.*) ]]

	# P = partition, N = nodeset
	P=${BASH_REMATCH[1]}
	N=${BASH_REMATCH[2]}
	U=${BASH_REMATCH[3]}

	if [[ $N =~ \(.*\) ]] 
	then
       echo "ERREUR - Mauvais jobid ! ($job_id)"
	   exit 1
	fi

	for n in $(nodeset -e $N)
	do
		if [[ $verb == 1 ]]
		then
			echo "$n: APPEL DE $0 --check $U $*"
		fi
		ssh $n export PLACEMENT_ARCHI=\"$P\" \; $0 --check $U $*
	done

# --host: on envoie la commande sur le hote concerné avec check='*'
elif [[ $host != "" ]]
then
	# Détecter la partition, à condition qu'un job soit exécuté sur le host !
	# Et sinon la commande n'a aucun intérêt
	P=$(squeue --noheader -w $host -o "%.9P"|head -1)
	if [[ $P == "" ]]
	then
		echo "OUPS - Pas de job sur $host actuellement"
		exit 1
	fi
	if [[ $verb == 1 ]]
	then
		echo "$host: APPEL DE $0 $* --check='*'"
	fi

	ssh $host export PLACEMENT_ARCHI=\"$P\" \;  $0 $* --check='*'

# Pas de $job_id: on passe les switches à placement.py
else
	if [[ "$*" =~ --jobid ]]
	then
       echo "Usage: placement --jobid 12345 --check=EXE [--ascii] [--taskset]"
	   exit 1
	else
	   exec $placement $*
	fi
fi

